{
    "contractName": "CMLX",
    "abi": [
        {
            "inputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_amount",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "_extraData",
                    "type": "bytes"
                }
            ],
            "name": "approveAndCall",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "success",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burn",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burnFrom",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_value",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "_data",
                    "type": "bytes"
                }
            ],
            "name": "transferAndCall",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "success",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.5.15+commit.6a57276f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.      * Requirements:      * - `spender` cannot be the zero address.\"},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"function that allow to approve for transfer and call contract in one transaction approveAndCAll https://github.com/ethereum/ethereum-org/blob/master/solidity/token-advanced.sol receiveApproval should fail on eror, as no value is returned\",\"params\":{\"_amount\":\"amount of tokens\",\"_extraData\":\"optional encoded data to send to contract\",\"_spender\":\"contract address\"},\"return\":\"True if function call was succesfull\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller.      * See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"See {ERC20-_burnFrom}.\"},\"constructor\":{\"details\":\"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).      * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.      * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"function that transer tokens to diven address and call function on that address transferAndCall standard https://github.com/ethereum/EIPs/issues/677 if onTokenTransfer fails returning false transfer is done anyway, so called contract should allow to call with tokens send already\",\"params\":{\"_data\":\"optional extra data to process in calling contract\",\"_to\":\"address to send tokens and call\",\"_value\":\"amount of tokens\"},\"return\":\"success True if all succedd\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.      * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"c:/Users/rav3n/source/repos/cmlx/CMLX-Token.sol\":\"CMLX\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/rav3n/source/repos/cmlx/CMLX-Token.sol\":{\"keccak256\":\"0x8870d2d574407f8a96572d1da69cf789bf67a005e6d8f43df25dbe9d8d162b64\",\"urls\":[\"bzz-raw://2ea0a7beeb47aabb835a21ddc2b210f22079c56ab81bc6e631b85feb3784213e\",\"dweb:/ipfs/Qmf5kz4jeoHVN36ARdDnyue8Bhk1GTWckqmBymLZfER1BA\"]},\"c:/Users/rav3n/source/repos/cmlx/ERC20.sol\":{\"keccak256\":\"0xa475000ad2b2e072ce532982d968e2b387d107619042607aa612e5e2f8791b6f\",\"urls\":[\"bzz-raw://4c3800494bf8a717b9af961a3e4d16aeb67da1c31b3b1286333be0f76cc23048\",\"dweb:/ipfs/QmPCyP8waRRHcu8MSjANV5nbFikBwBgWMrm9A73VFVas2A\"]},\"c:/Users/rav3n/source/repos/cmlx/ERC20Burnable.sol\":{\"keccak256\":\"0x7fb6bad0e29a5da7e9d33e2ceb5d9c01183e35b75dec05314acac5408d7d1841\",\"urls\":[\"bzz-raw://7c11a06d6127dadc27d9cbfcf2be13d9606ce8376ffbe4c850032f597756e6b0\",\"dweb:/ipfs/Qmd2vF8ztvQHXVofE67GdYhS4uJNCh8PHpvX9q7hwZ8c14\"]},\"c:/Users/rav3n/source/repos/cmlx/ERC20Detailed.sol\":{\"keccak256\":\"0x4c1396e12c8403308cfb5174fe914b2ee2722ea154d10a173f9aabb48ebabcb7\",\"urls\":[\"bzz-raw://54c27cd23b07e70255d2c1fabaa766527bbc0d5a2cdc30375de97716a97534b3\",\"dweb:/ipfs/QmdciLdvhhsQxbWhTzS8A2KuqcEZrLppfm1PusaT3sJny1\"]},\"c:/Users/rav3n/source/repos/cmlx/IERC20.sol\":{\"keccak256\":\"0x23d034ea6e0e0aedcb037e064b7ae4ad55c8e42a10abcc1b0d3689866681af84\",\"urls\":[\"bzz-raw://8adfc00b218ec7b900a8bd2ffd69cb0e6245235e7fd63224fa07070fe7591cac\",\"dweb:/ipfs/QmZxa9Ge6nZ3q8st6DTVxExz9wkBJfGrVhWee8wxkZUPaL\"]},\"c:/Users/rav3n/source/repos/cmlx/SafeMath.sol\":{\"keccak256\":\"0x2c94fb4e8e831fe80abe3748ab8ae4358061935b6fbe0855633c116337b90ddf\",\"urls\":[\"bzz-raw://4f26d79724a5b22e4968eff58c144efd770f8a8b830bdc862102122b92beec59\",\"dweb:/ipfs/QmNnsA48PC8jwZdMpkpcBTBzoPq7suS5g5hbev4687Gad1\"]}},\"version\":1}",
    "bytecode": "608060405234801561001057600080fd5b506040805180820190915260128082527121b434b7309026b0b939b430b6102634b7b760711b602090920191825261004a916003916100e0565b50604080518082019091526004808252630869a98b60e31b602090920191825261007491816100e0565b506005805460ff191660121790556b033b2e3c9fd0803ce8000000600281905533600081815260208181526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a361017b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061012157805160ff191683800117855561014e565b8280016001018555821561014e579182015b8281111561014e578251825591602001919060010190610133565b5061015a92915061015e565b5090565b61017891905b8082111561015a5760008155600101610164565b90565b610fb18061018a6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806342966c6811610097578063a457c2d711610066578063a457c2d71461034f578063a9059cbb1461037b578063cae9ca51146103a7578063dd62ed3e1461042c576100f5565b806342966c68146102d657806370a08231146102f557806379cc67901461031b57806395d89b4114610347576100f5565b806323b872dd116100d357806323b872dd146101d1578063313ce5671461020757806339509351146102255780634000aea014610251576100f5565b806306fdde03146100fa578063095ea7b31461017757806318160ddd146101b7575b600080fd5b61010261045a565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b0381351690602001356104f0565b604080519115158252519081900360200190f35b6101bf610506565b60408051918252519081900360200190f35b6101a3600480360360608110156101e757600080fd5b506001600160a01b0381358116916020810135909116906040013561050c565b61020f61057b565b6040805160ff9092168252519081900360200190f35b6101a36004803603604081101561023b57600080fd5b506001600160a01b038135169060200135610584565b6101a36004803603606081101561026757600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561029757600080fd5b8201836020820111156102a957600080fd5b803590602001918460018302840111640100000000831117156102cb57600080fd5b5090925090506105c0565b6102f3600480360360208110156102ec57600080fd5b5035610689565b005b6101bf6004803603602081101561030b57600080fd5b50356001600160a01b0316610696565b6102f36004803603604081101561033157600080fd5b506001600160a01b0381351690602001356106b1565b6101026106bf565b6101a36004803603604081101561036557600080fd5b506001600160a01b038135169060200135610720565b6101a36004803603604081101561039157600080fd5b506001600160a01b038135169060200135610775565b6101a3600480360360608110156103bd57600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156103ed57600080fd5b8201836020820111156103ff57600080fd5b8035906020019184600183028401116401000000008311171561042157600080fd5b509092509050610782565b6101bf6004803603604081101561044257600080fd5b506001600160a01b0381358116916020013516610893565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e65780601f106104bb576101008083540402835291602001916104e6565b820191906000526020600020905b8154815290600101906020018083116104c957829003601f168201915b5050505050905090565b60006104fd3384846108be565b50600192915050565b60025490565b60006105198484846109aa565b610571843361056c85604051806060016040528060288152602001610e7f602891396001600160a01b038a166000908152600160209081526040808320338452909152902054919063ffffffff610b4e16565b6108be565b5060019392505050565b60055460ff1690565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916104fd91859061056c908663ffffffff610be516565b60006105cd3386866109aa565b604051635260769b60e11b8152336004820181815260248301879052606060448401908152606484018690526001600160a01b0389169363a4c0ed3693928992899289929190608401848480828437600081840152601f19601f82011690508083019250505095505050505050602060405180830381600087803b15801561065457600080fd5b505af1158015610668573d6000803e3d6000fd5b505050506040513d602081101561067e57600080fd5b505195945050505050565b6106933382610c46565b50565b6001600160a01b031660009081526020819052604090205490565b6106bb8282610d6b565b5050565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e65780601f106104bb576101008083540402835291602001916104e6565b60006104fd338461056c85604051806060016040528060258152602001610f58602591393360009081526001602090815260408083206001600160a01b038d168452909152902054919063ffffffff610b4e16565b60006104fd3384846109aa565b600061078e85856104f0565b6107df576040805162461bcd60e51b815260206004820152601b60248201527f45524332303a20417070726f766520756e73756363657366756c6c0000000000604482015290519081900360640190fd5b604051638f4ffcb160e01b81523360048201818152602483018790523060448401819052608060648501908152608485018790526001600160a01b038a1694638f4ffcb194938a93928a928a92919060a401848480828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b15801561087057600080fd5b505af1158015610884573d6000803e3d6000fd5b50600198975050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166109035760405162461bcd60e51b8152600401808060200182810382526024815260200180610f346024913960400191505060405180910390fd5b6001600160a01b0382166109485760405162461bcd60e51b8152600401808060200182810382526022815260200180610e0e6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166109ef5760405162461bcd60e51b8152600401808060200182810382526025815260200180610f0f6025913960400191505060405180910390fd5b6001600160a01b038216610a345760405162461bcd60e51b8152600401808060200182810382526023815260200180610dc96023913960400191505060405180910390fd5b6001600160a01b038216301415610a7c5760405162461bcd60e51b8152600401808060200182810382526023815260200180610ea76023913960400191505060405180910390fd5b610abf81604051806060016040528060268152602001610e59602691396001600160a01b038616600090815260208190526040902054919063ffffffff610b4e16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610af4908263ffffffff610be516565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610bdd5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ba2578181015183820152602001610b8a565b50505050905090810190601f168015610bcf5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c3f576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610c8b5760405162461bcd60e51b8152600401808060200182810382526021815260200180610eee6021913960400191505060405180910390fd5b610cce81604051806060016040528060228152602001610dec602291396001600160a01b038516600090815260208190526040902054919063ffffffff610b4e16565b600080846001600160a01b03166001600160a01b0316815260200190815260200160002081905550610d2381604051806060016040528060298152602001610e3060299139600254919063ffffffff610b4e16565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b610d758282610c46565b6106bb823361056c84604051806060016040528060248152602001610eca602491396001600160a01b0388166000908152600160209081526040808320338452909152902054919063ffffffff610b4e1656fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a206275726e2063617573696e67206e6567617469766520746f74616c20737570706c7945524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e7366657220746f20636f6e7472616374206164647265737345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158208f83da40a55740304ded7b5ee3001a5f2e0b372c8708d7d03b596ec7048396d164736f6c634300050f0032",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106100f55760003560e01c806342966c6811610097578063a457c2d711610066578063a457c2d71461034f578063a9059cbb1461037b578063cae9ca51146103a7578063dd62ed3e1461042c576100f5565b806342966c68146102d657806370a08231146102f557806379cc67901461031b57806395d89b4114610347576100f5565b806323b872dd116100d357806323b872dd146101d1578063313ce5671461020757806339509351146102255780634000aea014610251576100f5565b806306fdde03146100fa578063095ea7b31461017757806318160ddd146101b7575b600080fd5b61010261045a565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b0381351690602001356104f0565b604080519115158252519081900360200190f35b6101bf610506565b60408051918252519081900360200190f35b6101a3600480360360608110156101e757600080fd5b506001600160a01b0381358116916020810135909116906040013561050c565b61020f61057b565b6040805160ff9092168252519081900360200190f35b6101a36004803603604081101561023b57600080fd5b506001600160a01b038135169060200135610584565b6101a36004803603606081101561026757600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561029757600080fd5b8201836020820111156102a957600080fd5b803590602001918460018302840111640100000000831117156102cb57600080fd5b5090925090506105c0565b6102f3600480360360208110156102ec57600080fd5b5035610689565b005b6101bf6004803603602081101561030b57600080fd5b50356001600160a01b0316610696565b6102f36004803603604081101561033157600080fd5b506001600160a01b0381351690602001356106b1565b6101026106bf565b6101a36004803603604081101561036557600080fd5b506001600160a01b038135169060200135610720565b6101a36004803603604081101561039157600080fd5b506001600160a01b038135169060200135610775565b6101a3600480360360608110156103bd57600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156103ed57600080fd5b8201836020820111156103ff57600080fd5b8035906020019184600183028401116401000000008311171561042157600080fd5b509092509050610782565b6101bf6004803603604081101561044257600080fd5b506001600160a01b0381358116916020013516610893565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e65780601f106104bb576101008083540402835291602001916104e6565b820191906000526020600020905b8154815290600101906020018083116104c957829003601f168201915b5050505050905090565b60006104fd3384846108be565b50600192915050565b60025490565b60006105198484846109aa565b610571843361056c85604051806060016040528060288152602001610e7f602891396001600160a01b038a166000908152600160209081526040808320338452909152902054919063ffffffff610b4e16565b6108be565b5060019392505050565b60055460ff1690565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916104fd91859061056c908663ffffffff610be516565b60006105cd3386866109aa565b604051635260769b60e11b8152336004820181815260248301879052606060448401908152606484018690526001600160a01b0389169363a4c0ed3693928992899289929190608401848480828437600081840152601f19601f82011690508083019250505095505050505050602060405180830381600087803b15801561065457600080fd5b505af1158015610668573d6000803e3d6000fd5b505050506040513d602081101561067e57600080fd5b505195945050505050565b6106933382610c46565b50565b6001600160a01b031660009081526020819052604090205490565b6106bb8282610d6b565b5050565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104e65780601f106104bb576101008083540402835291602001916104e6565b60006104fd338461056c85604051806060016040528060258152602001610f58602591393360009081526001602090815260408083206001600160a01b038d168452909152902054919063ffffffff610b4e16565b60006104fd3384846109aa565b600061078e85856104f0565b6107df576040805162461bcd60e51b815260206004820152601b60248201527f45524332303a20417070726f766520756e73756363657366756c6c0000000000604482015290519081900360640190fd5b604051638f4ffcb160e01b81523360048201818152602483018790523060448401819052608060648501908152608485018790526001600160a01b038a1694638f4ffcb194938a93928a928a92919060a401848480828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b15801561087057600080fd5b505af1158015610884573d6000803e3d6000fd5b50600198975050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166109035760405162461bcd60e51b8152600401808060200182810382526024815260200180610f346024913960400191505060405180910390fd5b6001600160a01b0382166109485760405162461bcd60e51b8152600401808060200182810382526022815260200180610e0e6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166109ef5760405162461bcd60e51b8152600401808060200182810382526025815260200180610f0f6025913960400191505060405180910390fd5b6001600160a01b038216610a345760405162461bcd60e51b8152600401808060200182810382526023815260200180610dc96023913960400191505060405180910390fd5b6001600160a01b038216301415610a7c5760405162461bcd60e51b8152600401808060200182810382526023815260200180610ea76023913960400191505060405180910390fd5b610abf81604051806060016040528060268152602001610e59602691396001600160a01b038616600090815260208190526040902054919063ffffffff610b4e16565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610af4908263ffffffff610be516565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610bdd5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ba2578181015183820152602001610b8a565b50505050905090810190601f168015610bcf5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c3f576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610c8b5760405162461bcd60e51b8152600401808060200182810382526021815260200180610eee6021913960400191505060405180910390fd5b610cce81604051806060016040528060228152602001610dec602291396001600160a01b038516600090815260208190526040902054919063ffffffff610b4e16565b600080846001600160a01b03166001600160a01b0316815260200190815260200160002081905550610d2381604051806060016040528060298152602001610e3060299139600254919063ffffffff610b4e16565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b610d758282610c46565b6106bb823361056c84604051806060016040528060248152602001610eca602491396001600160a01b0388166000908152600160209081526040808320338452909152902054919063ffffffff610b4e1656fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a206275726e2063617573696e67206e6567617469766520746f74616c20737570706c7945524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e7366657220746f20636f6e7472616374206164647265737345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158208f83da40a55740304ded7b5ee3001a5f2e0b372c8708d7d03b596ec7048396d164736f6c634300050f0032",
    "sourceMap": "583:2341:0:-;;;832:506;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;865:28:0;;;;;;;;;;;;;-1:-1:-1;;;865:28:0;;;;;;;;;:5;;:28;:::i;:::-;-1:-1:-1;931:16:0;;;;;;;;;;;;;-1:-1:-1;;;931:16:0;;;;;;;;;;;:::i;:::-;-1:-1:-1;998:9:0;:14;;-1:-1:-1;;998:14:0;1010:2;998:14;;;1077:28;1062:12;:43;;;1172:10;998:9;1162:21;;;;;;;;;;;:36;;;1248:46;;;;;;1172:10;;998:9;;1248:46;;;;;;;;;;583:2341;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;583:2341:0;;;-1:-1:-1;583:2341:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
    "deployedSourceMap": "583:2341:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;583:2341:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;310:85:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;310:85:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2538:150:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2538:150:1;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1553:93;;;:::i;:::-;;;;;;;;;;;;;;;;3160:302;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3160:302:1;;;;;;;;;;;;;;;;;:::i;1166:85:3:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3871:208:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3871:208:1;;;;;;;;:::i;2682:237:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;2682:237:0;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2682:237:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2682:237:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;2682:237:0;;-1:-1:-1;2682:237:0;-1:-1:-1;2682:237:0;:::i;414:83:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;414:83:2;;:::i;:::-;;1709:112:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1709:112:1;-1:-1:-1;;;;;1709:112:1;;:::i;559:105:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;559:105:2;;;;;;;;:::i;514:89:3:-;;;:::i;4582:259:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4582:259:1;;;;;;;;:::i;2034:158::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2034:158:1;;;;;;;;:::i;1815:329:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;1815:329:0;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1815:329:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1815:329:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;1815:329:0;;-1:-1:-1;1815:329:0;-1:-1:-1;1815:329:0;:::i;2255:136:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2255:136:1;;;;;;;;;;:::i;310:85:3:-;382:5;375:12;;;;;;;;-1:-1:-1;;375:12:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;349:13;;375:12;;382:5;;375:12;;382:5;375:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;310:85;:::o;2538:150:1:-;2604:4;2621:37;2630:10;2642:7;2651:6;2621:8;:37::i;:::-;-1:-1:-1;2676:4:1;2538:150;;;;:::o;1553:93::-;1626:12;;1553:93;:::o;3160:302::-;3251:4;3268:36;3278:6;3286:9;3297:6;3268:9;:36::i;:::-;3315:117;3324:6;3332:10;3344:87;3380:6;3344:87;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3344:19:1;;;;;;:11;:19;;;;;;;;3364:10;3344:31;;;;;;;;;:87;;:35;:87;:::i;:::-;3315:8;:117::i;:::-;-1:-1:-1;3450:4:1;3160:302;;;;;:::o;1166:85:3:-;1234:9;;;;1166:85;:::o;3871:208:1:-;3979:10;3953:4;4000:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;4000:32:1;;;;;;;;;;3953:4;;3970:79;;3991:7;;4000:48;;4037:10;4000:48;:36;:48;:::i;2682:237:0:-;2773:12;2801:34;2811:10;2823:3;2828:6;2801:9;:34::i;:::-;2847:65;;-1:-1:-1;;;2847:65:0;;2886:10;2847:65;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2847:38:0;;;;;2886:10;2898:6;;2906:5;;;;2847:65;;;;2906:5;;;;2847:65;1:33:-1;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2847:65:0;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2847:65:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2847:65:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2847:65:0;;2682:237;-1:-1:-1;;;;;2682:237:0:o;414:83:2:-;464:25;470:10;482:6;464:5;:25::i;:::-;414:83;:::o;1709:112:1:-;-1:-1:-1;;;;;1795:18:1;1768:7;1795:18;;;;;;;;;;;;1709:112::o;559:105:2:-;630:26;640:7;649:6;630:9;:26::i;:::-;559:105;;:::o;514:89:3:-;588:7;581:14;;;;;;;;-1:-1:-1;;581:14:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;555:13;;581:14;;588:7;;581:14;;588:7;581:14;;;;;;;;;;;;;;;;;;;;;;;;4582:259:1;4669:4;4686:125;4695:10;4707:7;4716:94;4753:15;4716:94;;;;;;;;;;;;;;;;;4728:10;4716:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;4716:32:1;;;;;;;;;;;:94;;:36;:94;:::i;2034:158::-;2105:4;2122:40;2132:10;2144:9;2155:6;2122:9;:40::i;1815:329:0:-;1919:12;1954:26;1962:8;1972:7;1954;:26::i;:::-;1946:66;;;;;-1:-1:-1;;;1946:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;2023:91;;-1:-1:-1;;;2023:91:0;;2067:10;2023:91;;;;;;;;;;;;2096:4;2023:91;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2023:43:0;;;;;2067:10;2079:7;;2096:4;2103:10;;;;2023:91;;;;2103:10;;;;2023:91;1:33:-1;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2023:91:0;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2023:91:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;2132:4:0;;1815:329;-1:-1:-1;;;;;;;;1815:329:0:o;2255:136:1:-;-1:-1:-1;;;;;2356:18:1;;;2329:7;2356:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2255:136::o;7052:338::-;-1:-1:-1;;;;;7146:19:1;;7138:68;;;;-1:-1:-1;;;7138:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7225:21:1;;7217:68;;;;-1:-1:-1;;;7217:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7298:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7350:32;;;;;;;;;;;;;;;;;7052:338;;;:::o;5331:556::-;-1:-1:-1;;;;;5429:20:1;;5421:70;;;;-1:-1:-1;;;5421:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5510:23:1;;5502:71;;;;-1:-1:-1;;;5502:71:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5592:26:1;;5613:4;5592:26;;5584:74;;;;-1:-1:-1;;;5584:74:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5691:71;5713:6;5691:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5691:17:1;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;5671:17:1;;;:9;:17;;;;;;;;;;;:91;;;;5796:20;;;;;;;:32;;5821:6;5796:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5773:20:1;;;:9;:20;;;;;;;;;;;;:55;;;;5844:35;;;;;;;5773:20;;5844:35;;;;;;;;;;;;;5331:556;;;:::o;1378:192:5:-;1464:7;1500:12;1492:6;;;;1484:29;;;;-1:-1:-1;;;1484:29:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1484:29:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1536:5:5;;;1378:192::o;860:181::-;918:7;950:5;;;974:6;;;;966:46;;;;;-1:-1:-1;;;966:46:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;1032:1;860:181;-1:-1:-1;;;860:181:5:o;6219:393:1:-;-1:-1:-1;;;;;6295:21:1;;6287:67;;;;-1:-1:-1;;;6287:67:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6388:68;6411:6;6388:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6388:18:1;;:9;:18;;;;;;;;;;;;:68;;:22;:68;:::i;:::-;6367:9;:18;6377:7;-1:-1:-1;;;;;6367:18:1;-1:-1:-1;;;;;6367:18:1;;;;;;;;;;;;:89;;;;6482:69;6499:6;6482:69;;;;;;;;;;;;;;;;;:12;;;:69;;:16;:69;:::i;:::-;6467:12;:84;6567:37;;;;;;;;6593:1;;-1:-1:-1;;;;;6567:37:1;;;;;;;;;;;;6219:393;;:::o;7576:228::-;7648:22;7654:7;7663:6;7648:5;:22::i;:::-;7681:115;7690:7;7699:10;7711:84;7748:6;7711:84;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7711:20:1;;;;;;:11;:20;;;;;;;;7732:10;7711:32;;;;;;;;;:84;;:36;:84;:::i",
    "sourcePath": "c:/Users/rav3n/source/repos/cmlx/CMLX-Token.sol",
    "compiler": {
        "name": "solc",
        "version": "0.5.15+commit.6a57276f"
    },
    "ast": {
        "absolutePath": "c:/Users/rav3n/source/repos/cmlx/CMLX-Token.sol",
        "exportedSymbols": {
            "CMLX": [
                134
            ],
            "ContractFallbacks": [
                27
            ]
        },
        "id": 135,
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.5",
                    ".15"
                ],
                "nodeType": "PragmaDirective",
                "src": "0:24:0"
            },
            {
                "absolutePath": "c:/Users/rav3n/source/repos/cmlx/ERC20.sol",
                "file": "./ERC20.sol",
                "id": 2,
                "nodeType": "ImportDirective",
                "scope": 135,
                "sourceUnit": 504,
                "src": "28:21:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/rav3n/source/repos/cmlx/ERC20Burnable.sol",
                "file": "./ERC20Burnable.sol",
                "id": 3,
                "nodeType": "ImportDirective",
                "scope": 135,
                "sourceUnit": 535,
                "src": "51:29:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/rav3n/source/repos/cmlx/ERC20Detailed.sol",
                "file": "./ERC20Detailed.sol",
                "id": 4,
                "nodeType": "ImportDirective",
                "scope": 135,
                "sourceUnit": 571,
                "src": "82:29:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "baseContracts": [],
                "contractDependencies": [],
                "contractKind": "contract",
                "documentation": "@dev This definitions allow calling contracts that handle token transfers\nhttps://github.com/ethereum/ethereum-org/blob/master/solidity/token-advanced.sol\nhttps://github.com/ethereum/EIPs/issues/677",
                "fullyImplemented": false,
                "id": 27,
                "linearizedBaseContracts": [
                    27
                ],
                "name": "ContractFallbacks",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": null,
                        "documentation": null,
                        "id": 15,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "receiveApproval",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 13,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 6,
                                    "name": "from",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 15,
                                    "src": "395:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 5,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "395:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 8,
                                    "name": "_amount",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 15,
                                    "src": "409:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 7,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "409:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 10,
                                    "name": "_token",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 15,
                                    "src": "426:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 9,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "426:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 12,
                                    "name": "_data",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 15,
                                    "src": "442:18:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 11,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "442:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "394:67:0"
                        },
                        "returnParameters": {
                            "id": 14,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "468:0:0"
                        },
                        "scope": 27,
                        "src": "370:99:0",
                        "stateMutability": "nonpayable",
                        "superFunction": null,
                        "visibility": "public"
                    },
                    {
                        "body": null,
                        "documentation": null,
                        "id": 26,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "onTokenTransfer",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 22,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 17,
                                    "name": "from",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 26,
                                    "src": "497:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 16,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "497:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 19,
                                    "name": "amount",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 26,
                                    "src": "511:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 18,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "511:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 21,
                                    "name": "data",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 26,
                                    "src": "527:17:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 20,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "527:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "496:49:0"
                        },
                        "returnParameters": {
                            "id": 25,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 24,
                                    "name": "success",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 26,
                                    "src": "562:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 23,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "562:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "561:14:0"
                        },
                        "scope": 27,
                        "src": "472:104:0",
                        "stateMutability": "nonpayable",
                        "superFunction": null,
                        "visibility": "public"
                    }
                ],
                "scope": 135,
                "src": "336:243:0"
            },
            {
                "baseContracts": [
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 28,
                            "name": "ERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 503,
                            "src": "600:5:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$503",
                                "typeString": "contract ERC20"
                            }
                        },
                        "id": 29,
                        "nodeType": "InheritanceSpecifier",
                        "src": "600:5:0"
                    },
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 30,
                            "name": "ERC20Detailed",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 570,
                            "src": "607:13:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Detailed_$570",
                                "typeString": "contract ERC20Detailed"
                            }
                        },
                        "id": 31,
                        "nodeType": "InheritanceSpecifier",
                        "src": "607:13:0"
                    },
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 32,
                            "name": "ERC20Burnable",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 534,
                            "src": "622:13:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Burnable_$534",
                                "typeString": "contract ERC20Burnable"
                            }
                        },
                        "id": 33,
                        "nodeType": "InheritanceSpecifier",
                        "src": "622:13:0"
                    }
                ],
                "contractDependencies": [
                    503,
                    534,
                    570,
                    639
                ],
                "contractKind": "contract",
                "documentation": null,
                "fullyImplemented": true,
                "id": 134,
                "linearizedBaseContracts": [
                    134,
                    534,
                    570,
                    503,
                    639
                ],
                "name": "CMLX",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 68,
                            "nodeType": "Block",
                            "src": "854:484:0",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "id": 38,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "argumentTypes": null,
                                            "id": 36,
                                            "name": "_name",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 541,
                                            "src": "865:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "argumentTypes": null,
                                            "hexValue": "4368696e61204d61727368616c204c696f6e",
                                            "id": 37,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "873:20:0",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_8bfe312c4f50a2a8a2c6b40b74e045806fcb7639a3dbfe3b27eefcdd486815a8",
                                                "typeString": "literal_string \"China Marshal Lion\""
                                            },
                                            "value": "China Marshal Lion"
                                        },
                                        "src": "865:28:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "id": 39,
                                    "nodeType": "ExpressionStatement",
                                    "src": "865:28:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "id": 42,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "argumentTypes": null,
                                            "id": 40,
                                            "name": "_symbol",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 543,
                                            "src": "931:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "argumentTypes": null,
                                            "hexValue": "434d4c58",
                                            "id": 41,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "941:6:0",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_6103c60eb12f05397be64cb41e05c2b0a15cb507e58e6a309a515bb42e4f7e34",
                                                "typeString": "literal_string \"CMLX\""
                                            },
                                            "value": "CMLX"
                                        },
                                        "src": "931:16:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "id": 43,
                                    "nodeType": "ExpressionStatement",
                                    "src": "931:16:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "id": 46,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "argumentTypes": null,
                                            "id": 44,
                                            "name": "_decimals",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 545,
                                            "src": "998:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "argumentTypes": null,
                                            "hexValue": "3138",
                                            "id": 45,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1010:2:0",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_18_by_1",
                                                "typeString": "int_const 18"
                                            },
                                            "value": "18"
                                        },
                                        "src": "998:14:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 47,
                                    "nodeType": "ExpressionStatement",
                                    "src": "998:14:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "id": 50,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "argumentTypes": null,
                                            "id": 48,
                                            "name": "_totalSupply",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 155,
                                            "src": "1062:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "argumentTypes": null,
                                            "hexValue": "31303030303030303030303030303030303030303030303030303030",
                                            "id": 49,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1077:28:0",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                                                "typeString": "int_const 1000000000000000000000000000"
                                            },
                                            "value": "1000000000000000000000000000"
                                        },
                                        "src": "1062:43:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 51,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1062:43:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "id": 57,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 52,
                                                "name": "_balances",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 147,
                                                "src": "1162:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                    "typeString": "mapping(address => uint256)"
                                                }
                                            },
                                            "id": 55,
                                            "indexExpression": {
                                                "argumentTypes": null,
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "id": 53,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 709,
                                                    "src": "1172:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 54,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "1172:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "1162:21:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "argumentTypes": null,
                                            "id": 56,
                                            "name": "_totalSupply",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 155,
                                            "src": "1186:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "1162:36:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 58,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1162:36:0"
                                },
                                {
                                    "eventCall": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "hexValue": "30",
                                                        "id": 61,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1265:1:0",
                                                        "subdenomination": null,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        },
                                                        "value": "0"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        }
                                                    ],
                                                    "id": 60,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1257:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": "address"
                                                },
                                                "id": 62,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1257:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "id": 63,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 709,
                                                    "src": "1269:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 64,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "1269:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 65,
                                                "name": "_totalSupply",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 155,
                                                "src": "1281:12:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                },
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 59,
                                            "name": "Transfer",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 630,
                                            "src": "1248:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 66,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1248:46:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 67,
                                    "nodeType": "EmitStatement",
                                    "src": "1243:51:0"
                                }
                            ]
                        },
                        "documentation": "@dev Sets the values for `name`, `symbol`, and `decimals`. All three of\nthese values are immutable: they can only be set once during\nconstruction.",
                        "id": 69,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 34,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "844:2:0"
                        },
                        "returnParameters": {
                            "id": 35,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "854:0:0"
                        },
                        "scope": 134,
                        "src": "832:506:0",
                        "stateMutability": "nonpayable",
                        "superFunction": null,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 103,
                            "nodeType": "Block",
                            "src": "1935:209:0",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 82,
                                                        "name": "_spender",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 71,
                                                        "src": "1962:8:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 83,
                                                        "name": "_amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 73,
                                                        "src": "1972:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 81,
                                                    "name": "approve",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 229,
                                                    "src": "1954:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                        "typeString": "function (address,uint256) returns (bool)"
                                                    }
                                                },
                                                "id": 84,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1954:26:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "hexValue": "45524332303a20417070726f766520756e73756363657366756c6c",
                                                "id": 85,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1982:29:0",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_a3399745dd6d4ddac6ee115b62a913ae9ef3849484b4a470eccde92340f57967",
                                                    "typeString": "literal_string \"ERC20: Approve unsuccesfull\""
                                                },
                                                "value": "ERC20: Approve unsuccesfull"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_a3399745dd6d4ddac6ee115b62a913ae9ef3849484b4a470eccde92340f57967",
                                                    "typeString": "literal_string \"ERC20: Approve unsuccesfull\""
                                                }
                                            ],
                                            "id": 80,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                712,
                                                713
                                            ],
                                            "referencedDeclaration": 713,
                                            "src": "1946:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 86,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1946:66:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 87,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1946:66:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "id": 92,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 709,
                                                    "src": "2067:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 93,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "2067:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 94,
                                                "name": "_amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 73,
                                                "src": "2079:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 96,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 735,
                                                        "src": "2096:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_CMLX_$134",
                                                            "typeString": "contract CMLX"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_CMLX_$134",
                                                            "typeString": "contract CMLX"
                                                        }
                                                    ],
                                                    "id": 95,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "2088:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": "address"
                                                },
                                                "id": 97,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2088:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 98,
                                                "name": "_extraData",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 75,
                                                "src": "2103:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                                    "typeString": "bytes calldata"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                                    "typeString": "bytes calldata"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 89,
                                                        "name": "_spender",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 71,
                                                        "src": "2041:8:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 88,
                                                    "name": "ContractFallbacks",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 27,
                                                    "src": "2023:17:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_ContractFallbacks_$27_$",
                                                        "typeString": "type(contract ContractFallbacks)"
                                                    }
                                                },
                                                "id": 90,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2023:27:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_ContractFallbacks_$27",
                                                    "typeString": "contract ContractFallbacks"
                                                }
                                            },
                                            "id": 91,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "receiveApproval",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 15,
                                            "src": "2023:43:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                                                "typeString": "function (address,uint256,address,bytes memory) external"
                                            }
                                        },
                                        "id": 99,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2023:91:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 100,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2023:91:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "hexValue": "74727565",
                                        "id": 101,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2132:4:0",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "value": "true"
                                    },
                                    "functionReturnParameters": 79,
                                    "id": 102,
                                    "nodeType": "Return",
                                    "src": "2125:11:0"
                                }
                            ]
                        },
                        "documentation": "@dev function that allow to approve for transfer and call contract in one transaction\napproveAndCAll https://github.com/ethereum/ethereum-org/blob/master/solidity/token-advanced.sol\nreceiveApproval should fail on eror, as no value is returned\n@param _spender contract address\n@param _amount amount of tokens\n@param _extraData optional encoded data to send to contract\n@return True if function call was succesfull",
                        "id": 104,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "approveAndCall",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 76,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 71,
                                    "name": "_spender",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 104,
                                    "src": "1839:16:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 70,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1839:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 73,
                                    "name": "_amount",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 104,
                                    "src": "1857:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 72,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1857:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 75,
                                    "name": "_extraData",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 104,
                                    "src": "1874:25:0",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 74,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1874:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1838:62:0"
                        },
                        "returnParameters": {
                            "id": 79,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 78,
                                    "name": "success",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 104,
                                    "src": "1919:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 77,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1919:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1918:14:0"
                        },
                        "scope": 134,
                        "src": "1815:329:0",
                        "stateMutability": "nonpayable",
                        "superFunction": null,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 132,
                            "nodeType": "Block",
                            "src": "2791:128:0",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "id": 116,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 709,
                                                    "src": "2811:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 117,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "2811:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 118,
                                                "name": "_to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 106,
                                                "src": "2823:3:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 119,
                                                "name": "_value",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 108,
                                                "src": "2828:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 115,
                                            "name": "_transfer",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 386,
                                            "src": "2801:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 120,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2801:34:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 121,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2801:34:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "id": 126,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 709,
                                                    "src": "2886:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 127,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "2886:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 128,
                                                "name": "_value",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 108,
                                                "src": "2898:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 129,
                                                "name": "_data",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 110,
                                                "src": "2906:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                                    "typeString": "bytes calldata"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                                    "typeString": "bytes calldata"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 123,
                                                        "name": "_to",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 106,
                                                        "src": "2865:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 122,
                                                    "name": "ContractFallbacks",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 27,
                                                    "src": "2847:17:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_ContractFallbacks_$27_$",
                                                        "typeString": "type(contract ContractFallbacks)"
                                                    }
                                                },
                                                "id": 124,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2847:22:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_ContractFallbacks_$27",
                                                    "typeString": "contract ContractFallbacks"
                                                }
                                            },
                                            "id": 125,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "onTokenTransfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 26,
                                            "src": "2847:38:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256,bytes memory) external returns (bool)"
                                            }
                                        },
                                        "id": 130,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2847:65:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "functionReturnParameters": 114,
                                    "id": 131,
                                    "nodeType": "Return",
                                    "src": "2840:72:0"
                                }
                            ]
                        },
                        "documentation": "@dev function that transer tokens to diven address and call function on that address\ntransferAndCall standard https://github.com/ethereum/EIPs/issues/677\nif onTokenTransfer fails returning false transfer is done anyway, so called contract should allow to call with tokens send already\n@param _to address to send tokens and call\n@param _value amount of tokens\n@param _data optional extra data to process in calling contract\n@return success True if all succedd",
                        "id": 133,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "transferAndCall",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 111,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 106,
                                    "name": "_to",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 133,
                                    "src": "2707:11:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 105,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2707:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 108,
                                    "name": "_value",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 133,
                                    "src": "2720:11:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 107,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2720:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 110,
                                    "name": "_data",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 133,
                                    "src": "2733:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "calldata",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_calldata_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 109,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2733:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2706:48:0"
                        },
                        "returnParameters": {
                            "id": 114,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 113,
                                    "name": "success",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 133,
                                    "src": "2773:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 112,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2773:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2772:14:0"
                        },
                        "scope": 134,
                        "src": "2682:237:0",
                        "stateMutability": "nonpayable",
                        "superFunction": null,
                        "visibility": "external"
                    }
                ],
                "scope": 135,
                "src": "583:2341:0"
            }
        ],
        "src": "0:2926:0"
    },
    "functionHashes": {
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "approveAndCall(address,uint256,bytes)": "cae9ca51",
        "balanceOf(address)": "70a08231",
        "burn(uint256)": "42966c68",
        "burnFrom(address,uint256)": "79cc6790",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "increaseAllowance(address,uint256)": "39509351",
        "name()": "06fdde03",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferAndCall(address,uint256,bytes)": "4000aea0",
        "transferFrom(address,address,uint256)": "23b872dd"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "803400",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "allowance(address,address)": "1338",
            "approve(address,uint256)": "infinite",
            "approveAndCall(address,uint256,bytes)": "infinite",
            "balanceOf(address)": "1190",
            "burn(uint256)": "infinite",
            "burnFrom(address,uint256)": "infinite",
            "decimals()": "1058",
            "decreaseAllowance(address,uint256)": "infinite",
            "increaseAllowance(address,uint256)": "infinite",
            "name()": "infinite",
            "symbol()": "infinite",
            "totalSupply()": "1066",
            "transfer(address,uint256)": "infinite",
            "transferAndCall(address,uint256,bytes)": "infinite",
            "transferFrom(address,address,uint256)": "infinite"
        }
    }
}